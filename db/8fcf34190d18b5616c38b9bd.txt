<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" cla<hr /><link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>  Course Link: <a href="https://www.yuque.com/books/share/ddbdba56-dc9f-4997-9e18-d9e69309d343/ii1eba">https://www.yuque.com/books/share/ddbdba56-dc9f-4997-9e18-d9e69309d343/ii1eba</a></p></blockquote><h1 id="1-软件架构"><a href="#1-软件架构" class="headerlink" title="1.软件架构"></a>1.软件架构</h1><p>B/S 架构软件 —— 我们所有的东西都希望通过网站的形式使用，而不依赖于任何其他第三方环境，且依赖于浏览器的应用</p><h2 id="系统软件"><a href="#系统软件" class="headerlink" title="系统软件"></a>系统软件</h2><ul><li><p>  <strong>操作系统、驱动程序等</strong>        </p></li><li><p>  C/C++</p></li></ul><h2 id="C-S架构"><a href="#C-S架构" class="headerlink" title="C/S架构"></a>C/S架构</h2><ul><li><p>  <strong>桌面应用</strong></p></li><li><p>  client 客户端    server 服务端</p></li><li><p>  C/C++    C#    QT</p></li></ul><p>​        eg： WPS  UWP软件(windows store)  Adobe</p><h2 id="B-S架构"><a href="#B-S架构" class="headerlink" title="B/S架构"></a>B/S架构</h2><ul><li><p>  <strong>开发网站</strong></p></li><li><p>  browser 浏览器    server 服务端</p></li><li><p>分类</p><ul><li>  <strong>1.前端</strong>        HTML  CSS  JavaScript  </li><li>  <strong>2.后端</strong>        Java  Python  PHP  Node  Golang  </li></ul></li></ul><p>​        eg：Web程序(tb  jd  bilibili  baidu… )    “小程序”(mini program)</p><h2 id="PS-移动端"><a href="#PS-移动端" class="headerlink" title="PS.移动端"></a>PS.移动端</h2><ul><li><p>  Android          Java–&gt;Kotlin</p></li><li><p>  IOS                  Object-c</p></li></ul><h1 id="2-开发B-S架构软件需要哪些人才？"><a href="#2-开发B-S架构软件需要哪些人才？" class="headerlink" title="2. 开发B/S架构软件需要哪些人才？"></a>2. 开发B/S架构软件需要哪些人才？</h1><p>前端</p><p>后端</p><p>测试</p><p>运维 —— 管服务器、管部署</p><p>产品经理（PM）</p><p>首席技术官CTO【技术岗最高职位】（可能没有）</p><p>架构师【技术岗次高职位】</p><h1 id="3-前端准备"><a href="#3-前端准备" class="headerlink" title="3. 前端准备"></a>3. 前端准备</h1><h2 id="VS-Code"><a href="#VS-Code" class="headerlink" title="VS Code"></a>VS Code</h2><h2 id="Google-Chrome"><a href="#Google-Chrome" class="headerlink" title="Google Chrome"></a>Google Chrome</h2><h2 id="Node-js"><a href="#Node-js" class="headerlink" title="Node.js"></a>Node.js</h2><p>设置淘宝镜像命令：</p><pre class="line-numbers language-none"><code class="language-none">npm install -g cnpm --registry&#x3D;https:&#x2F;&#x2F;registry.npm.taobao.org<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="Yarn（可选）"><a href="#Yarn（可选）" class="headerlink" title="Yarn（可选）"></a>Yarn（可选）</h2><p>PS：如果你要安装它，前提是必须安装Node.js</p><p>运行以下命令安装Yarn（新版本）</p><pre class="line-numbers language-none"><code class="language-none">npm install --global yarn<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>查看当前镜像源</p><pre class="line-numbers language-none"><code class="language-none">yarn config get registry<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>修改淘宝镜像</p><pre class="line-numbers language-none"><code class="language-none">yarn config set registry https:&#x2F;&#x2F;registry.npm.taobao.org&#x2F;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="4-前端预备课"><a href="#4-前端预备课" class="headerlink" title="4. 前端预备课"></a>4. 前端预备课</h1><p>学习指路☛<a href="https://developer.mozilla.org/zh-CN/docs/Learn">MDN前端文档</a></p><h2 id="HTML-——-定义网页内容的含义和结构"><a href="#HTML-——-定义网页内容的含义和结构" class="headerlink" title="HTML —— 定义网页内容的含义和结构"></a>HTML —— 定义网页内容的含义和结构</h2><p><strong>HTML</strong>（超文本标记语言——Hyper Text Markup Language）是构成 Web 世界的一砖一瓦。它定义了网页内容的含义和结构。</p><h2 id="CSS-——-网页的表现与展示效果"><a href="#CSS-——-网页的表现与展示效果" class="headerlink" title="CSS —— 网页的表现与展示效果"></a>CSS —— 网页的表现与展示效果</h2><p><strong>层叠样式表</strong> (Cascading Style Sheets，缩写为 <strong>CSS</strong>），是一种样式表语言，用来描述 HTML 或 XML（包括如 SVG、MathML、XHTML) 之类的 XML 分支语言）文档的呈现。CSS 描述了在屏幕、纸质、音频等其它媒体上的元素应该如何被渲染的问题。</p><h2 id="JavaScript-JS-——-网页的功能与行为"><a href="#JavaScript-JS-——-网页的功能与行为" class="headerlink" title="JavaScript (JS) —— 网页的功能与行为"></a>JavaScript (JS) —— 网页的功能与行为</h2><p><strong>JavaScript (</strong> <strong>JS</strong> ) 是一种具有函数优先的轻量级，解释型或即时编译型的编程语言。虽然它是作为开发Web 页面的脚本语言而出名的，但是它也被用到了很多非浏览器环境中，例如 Node.js、 Apache CouchDB 和 Adobe Acrobat)。JavaScript 是一种基于原型编程、多范式的动态脚本语言，并且支持面向对象、命令式和声明式（如函数式编程）风格。</p><h2 id="JS-框架"><a href="#JS-框架" class="headerlink" title="JS 框架"></a>JS 框架</h2><p>jQuery    Vue    React</p><h2 id="CSS-框架"><a href="#CSS-框架" class="headerlink" title="CSS 框架"></a>CSS 框架</h2><p>Bootstrap    Element UI</p><h1 id="5-后端预备课"><a href="#5-后端预备课" class="headerlink" title="5. 后端预备课"></a>5. 后端预备课</h1><h2 id="VMware-虚拟机"><a href="#VMware-虚拟机" class="headerlink" title="VMware 虚拟机"></a>VMware 虚拟机</h2><blockquote><p>学习指路☛<a href="https://www.bilibili.com/video/BV1t741167UB">https://www.bilibili.com/video/BV1t741167UB</a></p></blockquote><ol><li><p>  虚拟、安全性 —— 与本机独立，虚拟化的一个系统</p></li><li><p>  随意性 —— 可以把软件拖来拖去</p></li><li><p>  快捷快照 —— 快速恢复到原来状态</p></li></ol><p><strong>VMware Workstation</strong></p><blockquote><p><a href="https://www.vmware.com/products/workstation-pro/workstation-pro-evaluation.html">https://www.vmware.com/products/workstation-pro/workstation-pro-evaluation.html</a></p></blockquote><p><strong>win10官方镜像网站</strong></p><blockquote><p><a href="https://www.microsoft.com/zh-cn/software-download/windows10/">https://www.microsoft.com/zh-cn/software-download/windows10/</a></p></blockquote><p><strong>Ctrl + Alt    释放鼠标，回到真实机</strong></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 备忘录——这台电脑用来学习的Ubuntu Server虚拟机</span><span class="token comment"># ip</span>~$ <span class="token function">ifconfig</span><span class="token comment"># login</span>login as:frankpswd:123456<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Linux基础"><a href="#Linux基础" class="headerlink" title="Linux基础"></a>Linux基础</h2><p>vim  shell </p><p>Android    小米 OPPO 华为 VIVO …  基于</p><p>Linux       CentOS RedHat  Ubuntu  Kali  …</p><h3 id="运维需要精通"><a href="#运维需要精通" class="headerlink" title="运维需要精通"></a>运维需要精通</h3><p>注：搜索Ubuntu 的问题一定要带上版本号 （eg.16.04/18.04）</p><blockquote><p>阿里镜像源：<a href="https://mirrors.aliyun.com/ubuntu/">https://mirrors.aliyun.com/ubuntu/</a></p></blockquote><ul><li><p>拿到系统先更新</p>  <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt-get</span> update<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>设置root密码</p>  <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">passwd</span> root<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>小火车试运行：sl</p>  <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> slsl<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>其他操作</p>  <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Ctrl+L <span class="token comment"># 清屏</span>Ctrl+U <span class="token comment"># 清行</span><span class="token function">ls</span> <span class="token parameter variable">-a</span> <span class="token comment"># 查看隐藏文件</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>安装必要软件</p>  <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> openssh-server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><h3 id="SSH连接"><a href="#SSH连接" class="headerlink" title="SSH连接"></a>SSH连接</h3><ul><li><p>本质——传输命令</p><p>  eg：在Putty中输入ls命令，通过SSH协议连接到ubuntu虚拟机，执行ls命令，然后返回结果给Putty</p></li><li><p>SSH连接</p>  <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ssh</span> id@xxx.xxx.x.x<span class="token punctuation">(</span>IP<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>  公司不会给你暴露IP地址，但会给你密钥，你离职时会删除</p></li><li><p>  推荐：XShell 功能更强，但是要钱；我们用的是Putty。</p></li></ul><h3 id="Linux中：粘贴-右键单击"><a href="#Linux中：粘贴-右键单击" class="headerlink" title="Linux中：粘贴 == 右键单击"></a>Linux中：粘贴 == 右键单击</h3><h3 id="代码怎么放到网站上？"><a href="#代码怎么放到网站上？" class="headerlink" title="代码怎么放到网站上？"></a>代码怎么放到网站上？</h3><ul><li><p>文件传输 基于FTP协议</p><ol><li>  部署到GitHub等代码管理上（如Git）【现在都用这个】</li><li>  FTP传输</li></ol></li><li><p>查看IP</p>  <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ifconfig</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>查看内存（-m 以MB为单位 ~代表用户目录）</p>  <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">free</span> <span class="token parameter variable">-m</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>  补全命令 —— <code>tab</code>键</p></li><li><p>进入工程文件夹</p>  <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">vim</span> <span class="token builtin class-name">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><h3 id="Linux中安装软件举例"><a href="#Linux中安装软件举例" class="headerlink" title="Linux中安装软件举例"></a>Linux中安装软件举例</h3><ul><li><p>安装nodejs</p>  <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> nodejs<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>安装yarn —— <strong>“安全+可靠+快”的包管理器（基于npm)</strong></p><ol><li><p>第一步——配置仓库</p>  <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">curl</span> <span class="token parameter variable">-sS</span> https://dl.yarnpkg.com/debian/pubkey.gpg <span class="token operator">|</span> <span class="token function">sudo</span> apt-key <span class="token function">add</span> <span class="token parameter variable">-echo</span> <span class="token string">"deb https://dl.yarnpkg.com/debian/ stable main"</span> <span class="token operator">|</span> <span class="token function">sudo</span> <span class="token function">tee</span> /etc/apt/sources.list.d/yarn.list<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>第二步——安装</p>  <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt-get</span> update <span class="token operator">&amp;&amp;</span> <span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> <span class="token function">yarn</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>第三步——检查</p>  <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">yarn</span> <span class="token parameter variable">-v</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>配置</p>  <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">yarn</span> config <span class="token builtin class-name">set</span> registry https://registry.yarnpkg.com<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol></li><li><p>安装pm2</p>  <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">yarn</span> global <span class="token function">add</span> pm2<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><h2 id="后端语言：Java-Go-Nodejs-C-NET-Python-PHP"><a href="#后端语言：Java-Go-Nodejs-C-NET-Python-PHP" class="headerlink" title="后端语言：Java/Go/Nodejs/C#(.NET)/Python/PHP"></a>后端语言：Java/Go/Nodejs/C#(.NET)/Python/PHP</h2><blockquote><p>JSP –&gt; 在html里面扩展java代码 eg: &lt;%for…%&gt;</p><p>前后端兼有，不利于业务拓展</p></blockquote><ul><li>现在已经前后端分离</li></ul><h2 id="HTTP服务器搭建软件：Tomcat-Nginx-Apache"><a href="#HTTP服务器搭建软件：Tomcat-Nginx-Apache" class="headerlink" title="HTTP服务器搭建软件：Tomcat/Nginx/Apache"></a>HTTP服务器搭建软件：Tomcat/Nginx/Apache</h2><ul><li><p>比如Tomcat，给某个IP开放一个端口（8080）</p></li><li><p>下面两者都是3000！</p></li></ul><h3 id="Express的搭建"><a href="#Express的搭建" class="headerlink" title="Express的搭建"></a>Express的搭建</h3><ul><li>基于 <a href="https://nodejs.org/en/">Node.js</a> 平台，快速、开放、极简的 Web 开发框架</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">yarn</span> init<span class="token function">git</span> init<span class="token function">yarn</span> <span class="token function">add</span> express <span class="token comment"># 安装</span><span class="token function">touch</span> app.js <span class="token comment"># 复制helloworld代码</span><span class="token function">node</span> app.js <span class="token comment"># 启动服务</span><span class="token comment"># 在app.js中app.get()上添加：app.use(express.static('public'));</span><span class="token function">mkdir</span> public<span class="token builtin class-name">cd</span> public~$ <span class="token function">vim</span> hello.html <span class="token comment"># 随便写个静态网页~$ cd ..~$ node app.js # 启动服务，进入/public，就看的到了</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="PM2"><a href="#PM2" class="headerlink" title="PM2"></a>PM2</h3><ul><li><p>PM2是一个进程管理工具，可以用它来管理你的node进程，并查看node进程的状态，当然也支持性能监控，进程守护，负载均衡等功能</p>  <pre class="line-numbers language-git" data-language="git"><code class="language-git">sudo yarn global add pm2# 进入目标工程文件夹下pm2 start app.js # 启动服务，可以在同个工程下页面间互相链接了<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>区别</p><ul><li>node app.js    只是短暂开启服务，而且没有优化</li><li>pm2 start app.js    只要服务器不关，就一直开着，还有优化</li></ul></li><li><p>  PS：买服务器–&gt;公网IP: 网站所有人都能打开</p></li></ul><p>​         备案+买域名–&gt;DNS服务器解析（作用：将IP+port端口转化为域名：<a href="http://www.xxx.com)/">www.xxx.com）</a></p><h2 id="数据库：MySQL-Oracle-SQL-Server-SQLite-MongoDB-Redis"><a href="#数据库：MySQL-Oracle-SQL-Server-SQLite-MongoDB-Redis" class="headerlink" title="数据库：MySQL/Oracle/SQL Server/SQLite/MongoDB/Redis"></a>数据库：MySQL/Oracle/SQL Server/SQLite/MongoDB/Redis</h2><blockquote><p>  T-SQL： MySQL/Oracle/SQL Server/SQLite，NO-SQL： MongoDB/Redis</p></blockquote><ul><li><p>背景：因为我们前面搭的都是<strong>静态页面</strong>——<strong>无数据交互</strong>！</p></li><li><p><strong>动态页面</strong> ：和用户之间具有数据交互，即对数据的增删改查(CRUD,create read update delete)</p></li><li><p>How？</p><p>  将数据存到txt中，纯属扯淡！！！</p><p>  存到excel中，稍好一点…至少有“<strong>表</strong>”了！但是过于庞大…</p><p>  更好的就是数据库！它本身也是有单独数据类型的，小数计算没有偏差，本质也是个文件。一个库相当于好多个excel表。</p></li><li><p>Recommend</p><p>  初学者学一个T-SQL和一个NO-SQL： <strong>MySQL和Redis</strong></p><p>  版本推荐：MySQL 5.7</p><blockquote><p>下载链接：<a href="https://dev.mysql.com/downloads/mysql/5.7.html">https://dev.mysql.com/downloads/mysql/5.7.html</a></p></blockquote><blockquote><p>Linux下安装配置：<a href="https://blog.csdn.net/weixx3/article/details/80782479">https://blog.csdn.net/weixx3/article/details/80782479</a></p></blockquote><p>  PS.    不懂的话，安装时按照Developer Default即可。</p><p>  ​        切记！<strong>用后端语言去驱动！</strong></p><p>  ​        推荐图形化界面：Navicat（windows远程连接linux中的mysql）<a href="https://www.navicat.com.cn/">https://www.navicat.com.cn/</a></p><p>  ​        推荐框架：ORM（@注释搞定，不用写sql语句，帮你执行sql，）<a href="https://typeorm.io/#/">https://typeorm.io/#/</a>        </p></li></ul><blockquote><p>  剩下的东西，水到渠成</p></blockquote><h2 id="MVC模式"><a href="#MVC模式" class="headerlink" title="MVC模式"></a>MVC模式</h2><p>model 模型</p><p>service 层</p><p>controller 控制器</p><h2 id="HTTP-API"><a href="#HTTP-API" class="headerlink" title="HTTP API"></a>HTTP API</h2><h2 id="TCP-UDP"><a href="#TCP-UDP" class="headerlink" title="TCP UDP"></a>TCP UDP</h2><h2 id="计算机网络"><a href="#计算机网络" class="headerlink" title="计算机网络"></a>计算机网络</h2><h1 id="6-Git"><a href="#6-Git" class="headerlink" title="6. Git"></a>6. Git</h1><p>开发人员：Linux作者（用C写的）</p><ol><li><p>版本控制 —— 保留了一切的历史 可以让代码迅速恢复到你想指定的commit位置</p><p>  version1 2 3（比如3有bug，回滚回2）【时光穿梭】</p></li><li><p>协作开发 —— 需要网络</p><p>  在自己的电脑上使用git，那确实是有版本控制功能，没有协作开发功能</p><p>  大家把每次写的东西放到哪？    基于Git的一个平台—— GitHub，GitLab，码云(Gitee)</p></li><li><p>如何放在Linux上部署运行？网站是怎么运行的？</p><p>  过程：各自开发，git push上传——测试成功，git合并——架构师那跑成了，git pull更新</p></li></ol><h1 id="7-全栈"><a href="#7-全栈" class="headerlink" title="7. 全栈"></a>7. 全栈</h1><ul><li><strong>全栈工程师</strong>是指掌握多种技能，胜任前端与后端，能利用多种技能独立完成产品的人。[Baidu Wikipedia]</li></ul><h1 id="8-DevOps"><a href="#8-DevOps" class="headerlink" title="8. DevOps"></a>8. DevOps</h1><ul><li><strong>DevOps</strong>（<strong>Dev</strong>elopment和<strong>Op</strong>erations的组合词）是一种重视“软件开发人员（Dev）”和“IT运维技术人员（Ops）”之间沟通合作的文化、运动或惯例。[Wikipedia]</li><li>开发+质量检测+技术运营</li></ul><h1 id="9-GitHub"><a href="#9-GitHub" class="headerlink" title="9. GitHub"></a>9. GitHub</h1><ul><li><p>  最好的程序猿网站</p></li><li><p>git克隆（尽量别直接Download）</p>  <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> clone url<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><h1 id="10-注意休息，-尽可能不要透支身体"><a href="#10-注意休息，-尽可能不要透支身体" class="headerlink" title="10. 注意休息， 尽可能不要透支身体"></a>10. 注意休息， 尽可能不要透支身体</h1><blockquote><p>  总结：本文是B/S预备方向课程笔记，偏向方向了解，由于记录时间较早，排版和格式较一般。</p><p>  如果对未来方向比较迷茫，想查看详细内容，可以点击文首课程链接了解。</p></blockquote>